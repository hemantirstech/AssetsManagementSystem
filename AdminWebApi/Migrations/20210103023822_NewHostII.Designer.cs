// <auto-generated />
using System;
using AdminDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminWebApi.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20210103023822_NewHostII")]
    partial class NewHostII
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AdminDAL.ADGenCodeMaster", b =>
                {
                    b.Property<long>("GenCodeMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenCodeMasterTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("GenCodeTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrintDesc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("GenCodeMasterId");

                    b.HasIndex("GenCodeTypeId");

                    b.ToTable("ADGenCodeMaster", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADGenCodeType", b =>
                {
                    b.Property<long>("GenCodeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenCodeTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenCodeTypePrintDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenCodeTypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("GenCodeTypeId");

                    b.ToTable("ADGenCodeType", "dbo");

                    b.HasData(
                        new
                        {
                            GenCodeTypeId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(1933),
                            GenCodeTypeDesc = "Company Type",
                            GenCodeTypePrintDesc = "CT",
                            GenCodeTypeTitle = "Company Type",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3170),
                            Sequence = 1L
                        },
                        new
                        {
                            GenCodeTypeId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3778),
                            GenCodeTypeDesc = "Registration Type",
                            GenCodeTypePrintDesc = "RT",
                            GenCodeTypeTitle = "Registration Type",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3794),
                            Sequence = 2L
                        },
                        new
                        {
                            GenCodeTypeId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3832),
                            GenCodeTypeDesc = "Login Type",
                            GenCodeTypePrintDesc = "LT",
                            GenCodeTypeTitle = "Login Type",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3834),
                            Sequence = 3L
                        },
                        new
                        {
                            GenCodeTypeId = 4L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3854),
                            GenCodeTypeDesc = "Bank Account Type",
                            GenCodeTypePrintDesc = "BA",
                            GenCodeTypeTitle = "Bank Account Type",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 553, DateTimeKind.Local).AddTicks(3855),
                            Sequence = 4L
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterAddressType", b =>
                {
                    b.Property<long>("MasterAddressTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AddressTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterAddressTypeId");

                    b.ToTable("ADMasterAddressType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterBankAccountType", b =>
                {
                    b.Property<long>("MasterBankAccountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterBankAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterBankAccountTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterBankAccountTypeId");

                    b.ToTable("ADMasterBankAccountType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterBranch", b =>
                {
                    b.Property<long>("MasterBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterAddressTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterStateId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterBranchId");

                    b.HasIndex("MasterAddressTypeId");

                    b.HasIndex("MasterCompanyId");

                    b.HasIndex("MasterCountryId");

                    b.HasIndex("MasterDesignationId");

                    b.HasIndex("MasterStateId");

                    b.ToTable("ADMasterBranch", "dbo");

                    b.HasData(
                        new
                        {
                            MasterBranchId = 1L,
                            BranchTitle = "IRS TECHNOLOGIES Nagpur",
                            Email = "support@irstechnologies.com",
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 548, DateTimeKind.Local).AddTicks(4644),
                            IsActive = true,
                            MasterCompanyId = 1L,
                            MobileNumber = "9999999999",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 548, DateTimeKind.Local).AddTicks(5455)
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterBusinessVerticle", b =>
                {
                    b.Property<long>("MasterBusinessVerticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessVerticleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterBusinessVerticleId");

                    b.ToTable("ADMasterBusinessVerticle", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCity", b =>
                {
                    b.Property<long>("MasterCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CityTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterCityId");

                    b.HasIndex("MasterStateId");

                    b.ToTable("ADMasterCity", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterColor", b =>
                {
                    b.Property<long>("MasterColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterColorId");

                    b.ToTable("ADMasterColor", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCompany", b =>
                {
                    b.Property<long>("MasterCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LUT_AppliactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterAddressTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterTimeZoneId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAC_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEZRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterCompanyId");

                    b.HasIndex("MasterAddressTypeId");

                    b.HasIndex("MasterCompanyTypeId");

                    b.HasIndex("MasterCountryId");

                    b.HasIndex("MasterCurrencyId");

                    b.HasIndex("MasterDesignationId");

                    b.HasIndex("MasterStateId");

                    b.HasIndex("MasterTimeZoneId");

                    b.ToTable("ADMasterCompany", "dbo");

                    b.HasData(
                        new
                        {
                            MasterCompanyId = 1L,
                            CompanyTitle = "IRS TECHNOLOGIES",
                            Email = "support@irstechnologies.com",
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 545, DateTimeKind.Local).AddTicks(8275),
                            IsActive = true,
                            MobileNumber = "9999999999",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 546, DateTimeKind.Local).AddTicks(8365)
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterCompanyType", b =>
                {
                    b.Property<long>("MasterCompanyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterCompanyTypeId");

                    b.ToTable("ADMasterCompanyType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterConfiguration", b =>
                {
                    b.Property<long>("MasterConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool?>("EnableEmailVerification")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableLoginMACIdAuthentication")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableMobileVerification")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableNoActivity5Day")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePasswordResetByAdmin")
                        .HasColumnType("bit");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SMSKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSSenderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SMTPPort")
                        .HasColumnType("bigint");

                    b.Property<string>("SMTPServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterConfigurationId");

                    b.HasIndex("MasterCompanyId");

                    b.ToTable("ADMasterConfiguration", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCountry", b =>
                {
                    b.Property<long>("MasterCountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryDialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterCountryId");

                    b.ToTable("ADMasterCountry", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCurrency", b =>
                {
                    b.Property<long>("MasterCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("ADMasterCountryMasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterCurrencyId");

                    b.HasIndex("ADMasterCountryMasterCountryId");

                    b.ToTable("ADMasterCurrency", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterDepartment", b =>
                {
                    b.Property<long>("MasterDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterDepartmentId");

                    b.ToTable("ADMasterDepartment", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterDesignation", b =>
                {
                    b.Property<long>("MasterDesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("ADMasterDepartmentMasterDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("DesignationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterDesignationId");

                    b.HasIndex("ADMasterDepartmentMasterDepartmentId");

                    b.ToTable("ADMasterDesignation", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployee", b =>
                {
                    b.Property<long>("MasterEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AadhaarNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfLeavingOrganisation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Gender")
                        .HasColumnType("bigint");

                    b.Property<string>("IFCSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBankAccountVerified")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaypalAccountVerified")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterBankAccountTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterBranchId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterEmployeeStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterEmployeeTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterPaymentTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterSalutationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterTimeZoneId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaypalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaypalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReportingHeadId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShiftCode_RoutingNo_IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadBankDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterEmployeeId");

                    b.HasIndex("MasterBankAccountTypeId");

                    b.HasIndex("MasterBranchId");

                    b.HasIndex("MasterCountryId");

                    b.HasIndex("MasterDepartmentId");

                    b.HasIndex("MasterDesignationId");

                    b.HasIndex("MasterEmployeeStatusId");

                    b.HasIndex("MasterEmployeeTypeId");

                    b.HasIndex("MasterPaymentTypeId");

                    b.HasIndex("MasterSalutationId");

                    b.HasIndex("MasterStateId");

                    b.HasIndex("MasterTimeZoneId");

                    b.ToTable("ADMasterEmployee", "dbo");

                    b.HasData(
                        new
                        {
                            MasterEmployeeId = 1L,
                            Email = "support@irstechnologies.com",
                            EmployeeName = "IRS TECHNOLOGIES",
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 548, DateTimeKind.Local).AddTicks(9644),
                            IsActive = true,
                            MasterBranchId = 1L,
                            MasterSalutationId = 1L,
                            MobileNumber = "9999999999",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 549, DateTimeKind.Local).AddTicks(427)
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployeeStatus", b =>
                {
                    b.Property<long>("MasterEmployeeStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeStatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterEmployeeStatusId");

                    b.ToTable("ADMasterEmployeeStatus", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployeeType", b =>
                {
                    b.Property<long>("MasterEmployeeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("EmpTypCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterEmployeeTypeId");

                    b.ToTable("ADMasterEmployeeType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterErrorLog", b =>
                {
                    b.Property<long>("MasterErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeVersion")
                        .HasColumnType("int");

                    b.Property<string>("SPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepComplete")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterErrorLogId");

                    b.ToTable("ADErrorLog", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterFinancialYear", b =>
                {
                    b.Property<long>("MasterFinancialYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CashBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CurrentYear")
                        .HasColumnType("bit");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinancialYearDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("YearEndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("YearLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("YearStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterFinancialYearId");

                    b.ToTable("ADMasterFinancialYear", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterFunction", b =>
                {
                    b.Property<long>("MasterFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionIconColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ParentMasterFunctionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterFunctionId");

                    b.ToTable("ADMasterFunction", "dbo");

                    b.HasData(
                        new
                        {
                            MasterFunctionId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(1771),
                            FunctionIcon = "fa fa-home",
                            FunctionIconColour = "",
                            FunctionLink = "/Dashboard/Index",
                            FunctionTitle = "Dashboard",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(2977),
                            ParentMasterFunctionId = 0L,
                            Sequence = 1L
                        },
                        new
                        {
                            MasterFunctionId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3612),
                            FunctionIcon = "fa fa-cog",
                            FunctionIconColour = "",
                            FunctionLink = "",
                            FunctionTitle = "Configuration",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3628),
                            ParentMasterFunctionId = 0L,
                            Sequence = 2L
                        },
                        new
                        {
                            MasterFunctionId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3667),
                            FunctionIcon = "",
                            FunctionIconColour = "",
                            FunctionLink = "/LicenceAggrement/ViewLicence",
                            FunctionTitle = "Licence Agreement",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3669),
                            ParentMasterFunctionId = 2L,
                            Sequence = 1L
                        },
                        new
                        {
                            MasterFunctionId = 4L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3691),
                            FunctionIcon = "fa fa-home",
                            FunctionIconColour = "",
                            FunctionLink = "/MasterFunction/Index",
                            FunctionTitle = "Master Function",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3693),
                            ParentMasterFunctionId = 2L,
                            Sequence = 2L
                        },
                        new
                        {
                            MasterFunctionId = 5L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3713),
                            FunctionIcon = "fa fa-cog",
                            FunctionIconColour = "",
                            FunctionLink = "/MasterProfile/Index",
                            FunctionTitle = "Master Profile",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3714),
                            ParentMasterFunctionId = 2L,
                            Sequence = 3L
                        },
                        new
                        {
                            MasterFunctionId = 6L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3742),
                            FunctionIcon = "",
                            FunctionIconColour = "",
                            FunctionLink = "//ProfileTaskMappings/Index",
                            FunctionTitle = "Task Mapping",
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(3743),
                            ParentMasterFunctionId = 2L,
                            Sequence = 4L
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterGender", b =>
                {
                    b.Property<long>("MasterGenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gendercode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterGenderId");

                    b.ToTable("ADMasterGender", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustryGroup", b =>
                {
                    b.Property<long>("MasterIndustryGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndustryGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryGroupTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterIndustryGroupId");

                    b.ToTable("ADMasterIndustryGroup", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustrySubType", b =>
                {
                    b.Property<long>("MasterIndustrySubTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndustrySubTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustrySubTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustrySubTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterIndustryTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterIndustrySubTypeId");

                    b.HasIndex("MasterIndustryTypeId");

                    b.ToTable("ADMasterIndustrySubType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustryType", b =>
                {
                    b.Property<long>("MasterIndustryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndustryTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterIndustryGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterIndustryTypeId");

                    b.HasIndex("MasterIndustryGroupId");

                    b.ToTable("ADMasterIndustryType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterLogin", b =>
                {
                    b.Property<long>("MasterLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterProfileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterRegistrationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterRegistrationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterLoginId");

                    b.HasIndex("MasterProfileId");

                    b.HasIndex("MasterRegistrationTypeId");

                    b.ToTable("ADMasterLogin", "dbo");

                    b.HasData(
                        new
                        {
                            MasterLoginId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 549, DateTimeKind.Local).AddTicks(8010),
                            IsActive = true,
                            IsFirstLogin = false,
                            IsVerified = true,
                            MasterProfileId = 1L,
                            MasterRegistrationId = 1L,
                            MasterRegistrationTypeId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 549, DateTimeKind.Local).AddTicks(8801),
                            Password = "P@ssword",
                            UserName = "admin@email.com",
                            VerificationCode = ""
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterLoginType", b =>
                {
                    b.Property<long>("MasterLoginTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterLoginTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterLoginTypeId");

                    b.ToTable("ADMasterLoginType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterMailTemplate", b =>
                {
                    b.Property<long>("MasterMailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("MailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailTemplateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SMTPPort")
                        .HasColumnType("bigint");

                    b.Property<string>("SMTPServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterMailTemplateId");

                    b.ToTable("ADMasterMailTemplate", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterMessageType", b =>
                {
                    b.Property<long>("MasterMessageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MessageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterMessageTypeId");

                    b.ToTable("ADMasterMessageType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterPaymentType", b =>
                {
                    b.Property<long>("MasterPaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterPaymentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterPaymentTypeId");

                    b.ToTable("ADMasterPaymentType", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterProfile", b =>
                {
                    b.Property<long>("MasterProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInsert")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelect")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterProfileId");

                    b.ToTable("ADMasterProfile", "dbo");

                    b.HasData(
                        new
                        {
                            MasterProfileId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(5803),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(6636),
                            ProfileDescription = "Super Admin",
                            ProfileTitle = "Super Admin"
                        },
                        new
                        {
                            MasterProfileId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(7283),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(7301),
                            ProfileDescription = "Admin",
                            ProfileTitle = "Admin"
                        },
                        new
                        {
                            MasterProfileId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(7345),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 550, DateTimeKind.Local).AddTicks(7346),
                            ProfileDescription = "Employee",
                            ProfileTitle = "Employee"
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegion", b =>
                {
                    b.Property<long>("MasterRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterRegionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterRegionId");

                    b.ToTable("ADMasterRegion", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegisteredDevice", b =>
                {
                    b.Property<long>("MasterRegisteredDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("DeviceVerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeviceVerified")
                        .HasColumnType("bit");

                    b.Property<string>("MacId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterLoginId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterTypeOfDeviceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterRegisteredDeviceId");

                    b.HasIndex("MasterLoginId");

                    b.HasIndex("MasterTypeOfDeviceId");

                    b.ToTable("ADMasterRegisteredDevice", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegistration", b =>
                {
                    b.Property<long>("MasterRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterBDPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterClientId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterRegistrationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterResearchProfileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterRegistrationId");

                    b.HasIndex("MasterEmployeeId");

                    b.HasIndex("MasterRegistrationTypeId");

                    b.ToTable("ADMasterRegistration", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegistrationType", b =>
                {
                    b.Property<long>("MasterRegistrationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterRegistrationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterRegistrationExpertType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterRegistrationTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterRegistrationTypeId");

                    b.ToTable("ADMasterRegistrationType", "dbo");

                    b.HasData(
                        new
                        {
                            MasterRegistrationTypeId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(3266),
                            IsActive = true,
                            MasterRegistrationCode = "SA",
                            MasterRegistrationTypeTitle = "Super Admin",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(4066)
                        },
                        new
                        {
                            MasterRegistrationTypeId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(4676),
                            IsActive = true,
                            MasterRegistrationCode = "AD",
                            MasterRegistrationTypeTitle = "Administrator",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(4692)
                        },
                        new
                        {
                            MasterRegistrationTypeId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(4729),
                            IsActive = true,
                            MasterRegistrationCode = "EM",
                            MasterRegistrationTypeTitle = "Employee",
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(4731)
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterReportingHead", b =>
                {
                    b.Property<long>("MasterReportingHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingHeadTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterReportingHeadId");

                    b.ToTable("ADMasterReportingHead", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterSalutation", b =>
                {
                    b.Property<long>("MasterSalutationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalutationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalutationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterSalutationId");

                    b.ToTable("ADMasterSalutation", "dbo");

                    b.HasData(
                        new
                        {
                            MasterSalutationId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(7402),
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(8197),
                            SalutationTitle = "Mr."
                        },
                        new
                        {
                            MasterSalutationId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(8806),
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(8827),
                            SalutationTitle = "Mrs."
                        },
                        new
                        {
                            MasterSalutationId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(8863),
                            IsActive = true,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 552, DateTimeKind.Local).AddTicks(8865),
                            SalutationTitle = "Dr."
                        });
                });

            modelBuilder.Entity("AdminDAL.ADMasterState", b =>
                {
                    b.Property<long>("MasterStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterStateId");

                    b.HasIndex("MasterCountryId");

                    b.ToTable("ADMasterState", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterStatus", b =>
                {
                    b.Property<long>("MasterStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterColorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterStatusId");

                    b.HasIndex("MasterColorId");

                    b.ToTable("ADMasterStatus", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterTax", b =>
                {
                    b.Property<long>("MasterTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTaxPercentageAmount")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TaxEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TaxStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MasterTaxId");

                    b.ToTable("ADMasterTax", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterTimeZone", b =>
                {
                    b.Property<long>("MasterTimeZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasDst")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZoneOffset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterTimeZoneId");

                    b.ToTable("ADMasterTimeZone", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterTypeOfDevice", b =>
                {
                    b.Property<long>("MasterTypeOfDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfDeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfDeviceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterTypeOfDeviceId");

                    b.ToTable("ADMasterTypeOfDevice", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMasterVendor", b =>
                {
                    b.Property<long>("MasterVendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LUT_AppliactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterAddressTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterDesignationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterTimeZoneId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAC_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEZRegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterVendorId");

                    b.HasIndex("MasterAddressTypeId");

                    b.HasIndex("MasterCompanyTypeId");

                    b.HasIndex("MasterCountryId");

                    b.HasIndex("MasterCurrencyId");

                    b.HasIndex("MasterDesignationId");

                    b.HasIndex("MasterStateId");

                    b.HasIndex("MasterTimeZoneId");

                    b.ToTable("ADMasterVendor", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADMessageNotification", b =>
                {
                    b.Property<long>("MasterMessageNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterBranchId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterMessageTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MessageFrom")
                        .HasColumnType("bigint");

                    b.Property<string>("MessageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MessageTo")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShareTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterMessageNotificationId");

                    b.HasIndex("MasterBranchId");

                    b.HasIndex("MasterCompanyId");

                    b.HasIndex("MasterMessageTypeId");

                    b.ToTable("ADMessageNotification", "dbo");
                });

            modelBuilder.Entity("AdminDAL.ADProfileTaskMapping", b =>
                {
                    b.Property<long>("MasterProfileTaskMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInsert")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelect")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterFunctionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterProfileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterProfileTaskMappingId");

                    b.HasIndex("MasterFunctionId");

                    b.HasIndex("MasterProfileId");

                    b.ToTable("ADProfileTaskMapping", "dbo");

                    b.HasData(
                        new
                        {
                            MasterProfileTaskMappingId = 1L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(7685),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 1L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(8474)
                        },
                        new
                        {
                            MasterProfileTaskMappingId = 2L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9106),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 2L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9123)
                        },
                        new
                        {
                            MasterProfileTaskMappingId = 3L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9162),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 3L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9164)
                        },
                        new
                        {
                            MasterProfileTaskMappingId = 4L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9186),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 4L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9188)
                        },
                        new
                        {
                            MasterProfileTaskMappingId = 5L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9208),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 5L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9209)
                        },
                        new
                        {
                            MasterProfileTaskMappingId = 6L,
                            EnterById = 1L,
                            EnterDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9268),
                            IsActive = true,
                            IsDelete = true,
                            IsInsert = true,
                            IsSelect = true,
                            IsUpdate = true,
                            MasterFunctionId = 6L,
                            MasterProfileId = 1L,
                            ModifiedById = 1L,
                            ModifiedDate = new DateTime(2021, 1, 3, 8, 8, 21, 551, DateTimeKind.Local).AddTicks(9270)
                        });
                });

            modelBuilder.Entity("AdminDAL.ADTransactionLogin", b =>
                {
                    b.Property<long>("TransactionLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterLoginId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterRegisteredDeviceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionLoginId");

                    b.HasIndex("MasterLoginId");

                    b.HasIndex("MasterRegisteredDeviceId");

                    b.ToTable("ADTransactionLogin", "dbo");
                });

            modelBuilder.Entity("AdminDAL.Model.SPCheckAvailableResult", b =>
                {
                    b.Property<string>("NameAvailable")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NameAvailable");

                    b.ToTable("CheckAvailableResults");
                });

            modelBuilder.Entity("AdminDAL.Model.SPDropDownFillResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("MasterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterId");

                    b.ToTable("DropDownFillResults");
                });

            modelBuilder.Entity("AdminDAL.Model.SPMaxTableMasterIdResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.HasKey("MasterId");

                    b.ToTable("MaxTableMasterIdResults");
                });

            modelBuilder.Entity("AdminDAL.Model.SPNextMasterIdResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.HasKey("MasterId");

                    b.ToTable("NextMasterIdResults");
                });

            modelBuilder.Entity("AdminDAL.Model.SPProfileTaskMappingResult", b =>
                {
                    b.Property<long?>("MasterFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionIconColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInsert")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelect")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterProfileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterProfileTaskMappingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentFunctionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentMasterFunctionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterFunctionId");

                    b.ToTable("ProfileTaskMappingResults");
                });

            modelBuilder.Entity("AdminDAL.Model.SPValidateAccountResult", b =>
                {
                    b.Property<long>("MasterFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BranchTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionIconColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInsert")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSelect")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MasterBranchId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterLoginId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterProfileId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterRegistrationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MasterRegistrationTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MasterSalutationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentMasterFunctionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ValidationCount")
                        .HasColumnType("int");

                    b.HasKey("MasterFunctionId");

                    b.ToTable("ValidateAccountResults");
                });

            modelBuilder.Entity("AdminDAL.ADGenCodeMaster", b =>
                {
                    b.HasOne("AdminDAL.ADGenCodeType", "ADGenCodeType")
                        .WithMany("ADGenCodeMasters")
                        .HasForeignKey("GenCodeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ADGenCodeType");
                });

            modelBuilder.Entity("AdminDAL.ADMasterBranch", b =>
                {
                    b.HasOne("AdminDAL.ADMasterAddressType", "ADMasterAddressType")
                        .WithMany("ADMasterBranches")
                        .HasForeignKey("MasterAddressTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCompany", "ADMasterCompany")
                        .WithMany("ADMasterBranches")
                        .HasForeignKey("MasterCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany("ADMasterBranches")
                        .HasForeignKey("MasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterDesignation", "ADMasterDesignation")
                        .WithMany("ADMasterBranches")
                        .HasForeignKey("MasterDesignationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterState", "ADMasterState")
                        .WithMany("ADMasterBranches")
                        .HasForeignKey("MasterStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterAddressType");

                    b.Navigation("ADMasterCompany");

                    b.Navigation("ADMasterCountry");

                    b.Navigation("ADMasterDesignation");

                    b.Navigation("ADMasterState");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCity", b =>
                {
                    b.HasOne("AdminDAL.ADMasterState", "ADMasterState")
                        .WithMany("ADMasterCities")
                        .HasForeignKey("MasterStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterState");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCompany", b =>
                {
                    b.HasOne("AdminDAL.ADMasterAddressType", "ADMasterAddressType")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterAddressTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCompanyType", "ADMasterCompanyType")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterCompanyTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCurrency", "ADMasterCurrency")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterDesignation", "ADMasterDesignation")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterDesignationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterState", "ADMasterState")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterTimeZone", "ADMasterTimeZone")
                        .WithMany("ADMasterCompanies")
                        .HasForeignKey("MasterTimeZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterAddressType");

                    b.Navigation("ADMasterCompanyType");

                    b.Navigation("ADMasterCountry");

                    b.Navigation("ADMasterCurrency");

                    b.Navigation("ADMasterDesignation");

                    b.Navigation("ADMasterState");

                    b.Navigation("ADMasterTimeZone");
                });

            modelBuilder.Entity("AdminDAL.ADMasterConfiguration", b =>
                {
                    b.HasOne("AdminDAL.ADMasterCompany", "ADMasterCompany")
                        .WithMany("ADMasterConfigurations")
                        .HasForeignKey("MasterCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterCompany");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCurrency", b =>
                {
                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany("ADMasterCurrencies")
                        .HasForeignKey("ADMasterCountryMasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterCountry");
                });

            modelBuilder.Entity("AdminDAL.ADMasterDesignation", b =>
                {
                    b.HasOne("AdminDAL.ADMasterDepartment", "ADMasterDepartment")
                        .WithMany("ADMasterDesignations")
                        .HasForeignKey("ADMasterDepartmentMasterDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterDepartment");
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployee", b =>
                {
                    b.HasOne("AdminDAL.ADMasterBankAccountType", "ADMasterBankAccountType")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterBankAccountTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterBranch", "ADMasterBranch")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterBranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterDepartment", "ADMasterDepartment")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterDesignation", "ADMasterDesignation")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterDesignationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterEmployeeStatus", "ADMasterEmployeeStatus")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterEmployeeStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterEmployeeType", "ADMasterEmployeeType")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterEmployeeTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterPaymentType", "ADMasterPaymentType")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterPaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterSalutation", "ADMasterSalutation")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterSalutationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterState", "ADMasterState")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterTimeZone", "ADMasterTimeZone")
                        .WithMany("ADMasterEmployees")
                        .HasForeignKey("MasterTimeZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterBankAccountType");

                    b.Navigation("ADMasterBranch");

                    b.Navigation("ADMasterCountry");

                    b.Navigation("ADMasterDepartment");

                    b.Navigation("ADMasterDesignation");

                    b.Navigation("ADMasterEmployeeStatus");

                    b.Navigation("ADMasterEmployeeType");

                    b.Navigation("ADMasterPaymentType");

                    b.Navigation("ADMasterSalutation");

                    b.Navigation("ADMasterState");

                    b.Navigation("ADMasterTimeZone");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustrySubType", b =>
                {
                    b.HasOne("AdminDAL.ADMasterIndustryType", "ADMasterIndustryType")
                        .WithMany("ADMasterIndustrySubTypes")
                        .HasForeignKey("MasterIndustryTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterIndustryType");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustryType", b =>
                {
                    b.HasOne("AdminDAL.ADMasterIndustryGroup", "ADMasterIndustryGroup")
                        .WithMany("ADMasterIndustryTypes")
                        .HasForeignKey("MasterIndustryGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterIndustryGroup");
                });

            modelBuilder.Entity("AdminDAL.ADMasterLogin", b =>
                {
                    b.HasOne("AdminDAL.ADMasterProfile", "ADMasterProfile")
                        .WithMany("ADMasterLogins")
                        .HasForeignKey("MasterProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterRegistrationType", "ADMasterRegistrationType")
                        .WithMany("ADMasterLogins")
                        .HasForeignKey("MasterRegistrationTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterProfile");

                    b.Navigation("ADMasterRegistrationType");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegisteredDevice", b =>
                {
                    b.HasOne("AdminDAL.ADMasterLogin", "ADMasterLogin")
                        .WithMany("ADMasterRegisteredDevices")
                        .HasForeignKey("MasterLoginId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterTypeOfDevice", "ADMasterTypeOfDevice")
                        .WithMany("ADMasterRegisteredDevices")
                        .HasForeignKey("MasterTypeOfDeviceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterLogin");

                    b.Navigation("ADMasterTypeOfDevice");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegistration", b =>
                {
                    b.HasOne("AdminDAL.ADMasterEmployee", "ADMasterEmployee")
                        .WithMany()
                        .HasForeignKey("MasterEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterRegistrationType", "ADMasterRegistrationType")
                        .WithMany("ADMasterRegistrations")
                        .HasForeignKey("MasterRegistrationTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterEmployee");

                    b.Navigation("ADMasterRegistrationType");
                });

            modelBuilder.Entity("AdminDAL.ADMasterState", b =>
                {
                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany("ADMasterStates")
                        .HasForeignKey("MasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterCountry");
                });

            modelBuilder.Entity("AdminDAL.ADMasterStatus", b =>
                {
                    b.HasOne("AdminDAL.ADMasterColor", "ADMasterColor")
                        .WithMany("ADMasterStatus")
                        .HasForeignKey("MasterColorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterColor");
                });

            modelBuilder.Entity("AdminDAL.ADMasterVendor", b =>
                {
                    b.HasOne("AdminDAL.ADMasterAddressType", "ADMasterAddressType")
                        .WithMany()
                        .HasForeignKey("MasterAddressTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCompanyType", "ADMasterCompanyType")
                        .WithMany()
                        .HasForeignKey("MasterCompanyTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCountry", "ADMasterCountry")
                        .WithMany()
                        .HasForeignKey("MasterCountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCurrency", "ADMasterCurrency")
                        .WithMany()
                        .HasForeignKey("MasterCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterDesignation", "ADMasterDesignation")
                        .WithMany()
                        .HasForeignKey("MasterDesignationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterState", "ADMasterState")
                        .WithMany()
                        .HasForeignKey("MasterStateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterTimeZone", "ADMasterTimeZone")
                        .WithMany()
                        .HasForeignKey("MasterTimeZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterAddressType");

                    b.Navigation("ADMasterCompanyType");

                    b.Navigation("ADMasterCountry");

                    b.Navigation("ADMasterCurrency");

                    b.Navigation("ADMasterDesignation");

                    b.Navigation("ADMasterState");

                    b.Navigation("ADMasterTimeZone");
                });

            modelBuilder.Entity("AdminDAL.ADMessageNotification", b =>
                {
                    b.HasOne("AdminDAL.ADMasterBranch", "ADMasterBranch")
                        .WithMany("ADMessageNotifications")
                        .HasForeignKey("MasterBranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterCompany", "ADMasterCompany")
                        .WithMany("ADMessageNotifications")
                        .HasForeignKey("MasterCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterMessageType", "ADMasterMessageType")
                        .WithMany("ADMessageNotifications")
                        .HasForeignKey("MasterMessageTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterBranch");

                    b.Navigation("ADMasterCompany");

                    b.Navigation("ADMasterMessageType");
                });

            modelBuilder.Entity("AdminDAL.ADProfileTaskMapping", b =>
                {
                    b.HasOne("AdminDAL.ADMasterFunction", "ADMasterFunction")
                        .WithMany("ADProfileTaskMappings")
                        .HasForeignKey("MasterFunctionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterProfile", "ADMasterProfile")
                        .WithMany("ADProfileTaskMappings")
                        .HasForeignKey("MasterProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterFunction");

                    b.Navigation("ADMasterProfile");
                });

            modelBuilder.Entity("AdminDAL.ADTransactionLogin", b =>
                {
                    b.HasOne("AdminDAL.ADMasterLogin", "ADMasterLogin")
                        .WithMany("ADTransactionLogins")
                        .HasForeignKey("MasterLoginId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdminDAL.ADMasterRegisteredDevice", "ADMasterRegisteredDevice")
                        .WithMany("ADTransactionLogins")
                        .HasForeignKey("MasterRegisteredDeviceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ADMasterLogin");

                    b.Navigation("ADMasterRegisteredDevice");
                });

            modelBuilder.Entity("AdminDAL.ADGenCodeType", b =>
                {
                    b.Navigation("ADGenCodeMasters");
                });

            modelBuilder.Entity("AdminDAL.ADMasterAddressType", b =>
                {
                    b.Navigation("ADMasterBranches");

                    b.Navigation("ADMasterCompanies");
                });

            modelBuilder.Entity("AdminDAL.ADMasterBankAccountType", b =>
                {
                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterBranch", b =>
                {
                    b.Navigation("ADMasterEmployees");

                    b.Navigation("ADMessageNotifications");
                });

            modelBuilder.Entity("AdminDAL.ADMasterColor", b =>
                {
                    b.Navigation("ADMasterStatus");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCompany", b =>
                {
                    b.Navigation("ADMasterBranches");

                    b.Navigation("ADMasterConfigurations");

                    b.Navigation("ADMessageNotifications");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCompanyType", b =>
                {
                    b.Navigation("ADMasterCompanies");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCountry", b =>
                {
                    b.Navigation("ADMasterBranches");

                    b.Navigation("ADMasterCompanies");

                    b.Navigation("ADMasterCurrencies");

                    b.Navigation("ADMasterEmployees");

                    b.Navigation("ADMasterStates");
                });

            modelBuilder.Entity("AdminDAL.ADMasterCurrency", b =>
                {
                    b.Navigation("ADMasterCompanies");
                });

            modelBuilder.Entity("AdminDAL.ADMasterDepartment", b =>
                {
                    b.Navigation("ADMasterDesignations");

                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterDesignation", b =>
                {
                    b.Navigation("ADMasterBranches");

                    b.Navigation("ADMasterCompanies");

                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployeeStatus", b =>
                {
                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterEmployeeType", b =>
                {
                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterFunction", b =>
                {
                    b.Navigation("ADProfileTaskMappings");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustryGroup", b =>
                {
                    b.Navigation("ADMasterIndustryTypes");
                });

            modelBuilder.Entity("AdminDAL.ADMasterIndustryType", b =>
                {
                    b.Navigation("ADMasterIndustrySubTypes");
                });

            modelBuilder.Entity("AdminDAL.ADMasterLogin", b =>
                {
                    b.Navigation("ADMasterRegisteredDevices");

                    b.Navigation("ADTransactionLogins");
                });

            modelBuilder.Entity("AdminDAL.ADMasterMessageType", b =>
                {
                    b.Navigation("ADMessageNotifications");
                });

            modelBuilder.Entity("AdminDAL.ADMasterPaymentType", b =>
                {
                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterProfile", b =>
                {
                    b.Navigation("ADMasterLogins");

                    b.Navigation("ADProfileTaskMappings");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegisteredDevice", b =>
                {
                    b.Navigation("ADTransactionLogins");
                });

            modelBuilder.Entity("AdminDAL.ADMasterRegistrationType", b =>
                {
                    b.Navigation("ADMasterLogins");

                    b.Navigation("ADMasterRegistrations");
                });

            modelBuilder.Entity("AdminDAL.ADMasterSalutation", b =>
                {
                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterState", b =>
                {
                    b.Navigation("ADMasterBranches");

                    b.Navigation("ADMasterCities");

                    b.Navigation("ADMasterCompanies");

                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterTimeZone", b =>
                {
                    b.Navigation("ADMasterCompanies");

                    b.Navigation("ADMasterEmployees");
                });

            modelBuilder.Entity("AdminDAL.ADMasterTypeOfDevice", b =>
                {
                    b.Navigation("ADMasterRegisteredDevices");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using AssetsDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetsWebApi.Migrations
{
    [DbContext(typeof(AssetsContext))]
    [Migration("20210215054236_NewHostIV")]
    partial class NewHostIV
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AssetsDAL.ASMasterAssetsAssignment", b =>
                {
                    b.Property<long>("MasterAssetsAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AssetsAssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AssetsDeAssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeAssignReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAssetsDeAssign")
                        .HasColumnType("bit");

                    b.Property<long?>("MasterEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterLocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterProductChildId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterAssetsAssignmentId");

                    b.HasIndex("MasterProductChildId");

                    b.ToTable("ASMasterAssetsAssignment", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterBrand", b =>
                {
                    b.Property<long>("MasterBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BrandLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterBrandId");

                    b.ToTable("ASMasterBrand", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterCategory", b =>
                {
                    b.Property<long>("MasterCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MasterCategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterCategoryType")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterCategoryId");

                    b.ToTable("ASMasterCategory", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterErrorLog", b =>
                {
                    b.Property<long>("MasterErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeVersion")
                        .HasColumnType("int");

                    b.Property<string>("SPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepComplete")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterErrorLogId");

                    b.ToTable("ASMasterErrorLog", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProduct", b =>
                {
                    b.Property<long>("MasterProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("ASMasterProductSizeMasterProductSizeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ASMasterProductTypeMasterProductTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryOfOrigin")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DepreciatePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDisclamer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MasterBrandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterSubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductBarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCurrency")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductHSNCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductMainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductTaxCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<string>("SafetyWarning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterProductId");

                    b.HasIndex("ASMasterProductSizeMasterProductSizeId");

                    b.HasIndex("ASMasterProductTypeMasterProductTypeId");

                    b.HasIndex("MasterBrandId");

                    b.HasIndex("MasterSubCategoryId");

                    b.ToTable("ASMasterProduct", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductChild", b =>
                {
                    b.Property<long>("MasterProductChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ConditionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionType")
                        .HasColumnType("int");

                    b.Property<decimal?>("DepreciatePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeadAssets")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSaleProduct")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTimeToSaleProduct")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemPackageQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("IterationOfWarranty")
                        .HasColumnType("int");

                    b.Property<string>("ManufacturerPartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MasterBranchId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterCompanyOwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("MasterProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterProductSizeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterSubscriptionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterVendorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfItemIncludeInProduct")
                        .HasColumnType("int");

                    b.Property<string>("ProductChildSKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductChildTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductColour")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductQty")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductQtyUnit")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("ServicePassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WarrantyExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WarrantyStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MasterProductChildId");

                    b.HasIndex("MasterProductId");

                    b.HasIndex("MasterProductSizeId");

                    b.ToTable("ASMasterProductChild", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductSize", b =>
                {
                    b.Property<long>("MasterProductSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductSizeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterProductSizeId");

                    b.ToTable("ASMasterProductSize", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductType", b =>
                {
                    b.Property<long>("MasterProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("MasterSubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.HasKey("MasterProductTypeId");

                    b.HasIndex("MasterSubCategoryId");

                    b.ToTable("ASMasterProductType", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterSubCategory", b =>
                {
                    b.Property<long>("MasterSubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("MasterCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("SubCategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterSubCategoryId");

                    b.HasIndex("MasterCategoryId");

                    b.ToTable("ASMasterSubCategory", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.ASTransactionProductHistory", b =>
                {
                    b.Property<long>("TransactionProductHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("EnterById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("MasterProductChildId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterSubscriptionTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MasterSubscriptionVendorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SubscriptionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadWarretyCard")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionProductHistoryId");

                    b.HasIndex("MasterProductChildId");

                    b.ToTable("ASTransactionProductHistory", "dbo");
                });

            modelBuilder.Entity("AssetsDAL.Model.SPCheckAvailableResult", b =>
                {
                    b.Property<string>("NameAvailable")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NameAvailable");

                    b.ToTable("CheckAvailableResults");
                });

            modelBuilder.Entity("AssetsDAL.Model.SPDropDownFillResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("MasterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterId");

                    b.ToTable("DropDownFillResults");
                });

            modelBuilder.Entity("AssetsDAL.Model.SPMaxTableMasterIdResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.HasKey("MasterId");

                    b.ToTable("MaxTableMasterIdResults");
                });

            modelBuilder.Entity("AssetsDAL.Model.SPNextMasterIdResult", b =>
                {
                    b.Property<long>("MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.HasKey("MasterId");

                    b.ToTable("NextMasterIdResults");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterAssetsAssignment", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterProductChild", "ASMasterProductChilds")
                        .WithMany()
                        .HasForeignKey("MasterProductChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ASMasterProductChilds");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProduct", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterProductSize", null)
                        .WithMany("ASMasterProducts")
                        .HasForeignKey("ASMasterProductSizeMasterProductSizeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetsDAL.ASMasterProductType", null)
                        .WithMany("ASMasterProducts")
                        .HasForeignKey("ASMasterProductTypeMasterProductTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetsDAL.ASMasterBrand", "ASMasterBrands")
                        .WithMany("ASMasterProducts")
                        .HasForeignKey("MasterBrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetsDAL.ASMasterSubCategory", "ASMasterSubCategories")
                        .WithMany("ASMasterProducts")
                        .HasForeignKey("MasterSubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ASMasterBrands");

                    b.Navigation("ASMasterSubCategories");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductChild", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterProduct", "ASMasterProducts")
                        .WithMany()
                        .HasForeignKey("MasterProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AssetsDAL.ASMasterProductSize", "ASMasterProductSizes")
                        .WithMany()
                        .HasForeignKey("MasterProductSizeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ASMasterProducts");

                    b.Navigation("ASMasterProductSizes");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductType", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterSubCategory", "ASMasterSubCategory")
                        .WithMany("ASMasterProductTypes")
                        .HasForeignKey("MasterSubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ASMasterSubCategory");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterSubCategory", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterCategory", "ASMasterCategory")
                        .WithMany("ASMasterSubCategories")
                        .HasForeignKey("MasterCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ASMasterCategory");
                });

            modelBuilder.Entity("AssetsDAL.ASTransactionProductHistory", b =>
                {
                    b.HasOne("AssetsDAL.ASMasterProductChild", "ASMasterProductChild")
                        .WithMany()
                        .HasForeignKey("MasterProductChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ASMasterProductChild");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterBrand", b =>
                {
                    b.Navigation("ASMasterProducts");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterCategory", b =>
                {
                    b.Navigation("ASMasterSubCategories");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductSize", b =>
                {
                    b.Navigation("ASMasterProducts");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterProductType", b =>
                {
                    b.Navigation("ASMasterProducts");
                });

            modelBuilder.Entity("AssetsDAL.ASMasterSubCategory", b =>
                {
                    b.Navigation("ASMasterProducts");

                    b.Navigation("ASMasterProductTypes");
                });
#pragma warning restore 612, 618
        }
    }
}

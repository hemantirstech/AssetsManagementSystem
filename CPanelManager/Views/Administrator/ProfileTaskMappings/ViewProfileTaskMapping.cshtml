@model CPanelManager.ViewModels.ProfileTaskMapping.IndexProfileTaskMappingViewModel


<!-- MAIN CONTENT -->
<div id="content">


    <form asp-action="SaveProfileTaskMapping" id="MasterProfile-form" novalidate="novalidate" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
                <h1 class="page-title txt-color-blueDark">
                    <i class="fa fa-edit fa-fw "></i>
                    Profile Task Mapping
                    <span>
                        >
                        Index
                    </span>
                </h1>
            </div>
            <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8" style="text-align:right;padding-top:10px;">
                <a asp-action="Index" class="btn btn-lg btn-labeled btn-danger">
                    <span class="btn-label"><i class="glyphicon glyphicon-remove"></i></span>Cancel
                </a>

                <button id="btnsave" type="submit" class="btn btn-lg btn-labeled btn-primary">
                    <span class="btn-label"><i class="glyphicon glyphicon-floppy-disk"></i></span>Save / Update
                </button>
            </div>
        </div>

        <!-- widget grid -->
        <section id="widget-grid" class="">

            <!-- START ROW -->
            <div class="row">

                <!-- NEW COL START -->
                <article class="col-sm-12 col-md-12 col-lg-12">

                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget" id="wid-id-1" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false" data-widget-fullscreenbutton="false" data-widget-collapsed="false" data-widget-togglebutton="false" data-widget-sortable="false">

                        <header>
                            <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                            <h2>Profile Task Mapping </h2>

                        </header>

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">

                                <table id="ProfileTaskMappingTable" class="table table-striped table-bordered table-hover" width="100%">
                                    <thead>
                                        <tr>
                                            <th style="width:20%">Parent</th>
                                            <th style="width:20%">Menu Name</th>
                                            <th style="width:20%">Description</th>
                                            <th style="width:8%;text-align:center;"><input style="width:100% !important;" type="checkbox" class="ckAll" id="chkReadAll" />Read</th>
                                            <th style="width:8%;text-align:center;"><input style="width:100% !important;" type="checkbox" class="ckAll" id="chkInsertAll" />Insert</th>
                                            <th style="width:9%;text-align:center;"><input style="width:100% !important;" type="checkbox" class="ckAll" id="chkUpdateAll" />Update</th>
                                            <th style="width:8%;text-align:center;"><input style="width:100% !important;" type="checkbox" class="ckAll" id="chkDeleteAll" />Delete</th>
                                            <th style="width:7%;text-align:center;"><input style="width:100% !important;" type="checkbox" class="checkBoxAll" id="chkbtnAll" />All</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            for (int i = 0; i < Model.ViewProfileTaskMappingList.Count(); i++)
                                            {
                                                @Html.EditorFor(a => a.ViewProfileTaskMappingList[i], "~/Views/Administrator/ProfileTaskMappings/EditorTemplates/ViewProfileTaskMappingViewModel.cshtml")
                                            }
                                        }
                                    </tbody>
                                </table>

                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->

                </article>
                <!-- END COL -->

            </div>
            <!-- END ROW -->
        </section>
        <!-- end widget grid -->
    </form>
</div>

@section Scripts {

    <script type="text/javascript">

        //############################################################################################################################################################################


        ///Common Function///
        function Check() {
            if ($(".ckAll:checked").length !== $(".ckAll").length) {
                $("#chkbtnAll").prop('checked', false)
                $(".CheckAll").prop('checked', false)
            }
            else {
                $("#chkbtnAll").prop('checked', true)
                $(".CheckAll").prop('checked', true)
            }
        }
        ///Common Function///

        ///For All///
        $("#chkbtnAll").click(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
        });


        $(".CheckAll").click(function () {
            $(this).parents('tr').find(':checkbox').prop('checked', this.checked);

            if ($(".CheckAll:checked").length == $(".CheckAll").length) {
                $("#chkbtnAll").prop('checked', true)
                $("#chkbtnAll,#chkReadAll,#chkUpdateAll,#chkInsertAll,#chkDeleteAll").prop('checked', true)
            }
            else {
                $("#chkbtnAll,#chkReadAll,#chkUpdateAll,#chkInsertAll,#chkDeleteAll").prop('checked', false)
            }
        });

        ///For All///

        ///For Read///

        $("#chkReadAll").click(function () {
            $('.ChkRead').not(this).prop('checked', this.checked);
            Check();
        });

        $(".ChkRead").click(function () {
            if ($(".ChkRead:checked").length == $(".ChkRead").length) {
                $("#chkReadAll").prop('checked', true)
            }
            else {
                $("#chkReadAll").prop('checked', false)
                $("#chkbtnAll").prop('checked', false)
            }
        });

        ///For Read///

        ///For Insert///

        $("#chkInsertAll").click(function () {
            $('.ChkInsert').not(this).prop('checked', this.checked);
            Check();
        });

        $(".ChkInsert").click(function () {
            if ($(".ChkInsert:checked").length == $(".ChkInsert").length) {
                $("#chkInsertAll").prop('checked', true)
            }
            else {
                $("#chkInsertAll").prop('checked', false)
                $("#chkbtnAll").prop('checked', false)
            }
        });
        ///For Insert///

        ///For Update///

        $("#chkUpdateAll").click(function () {
            $('.ChkUpdate').not(this).prop('checked', this.checked);
            Check();
        });

        $(".ChkUpdate").click(function () {
            if ($(".ChkUpdate:checked").length == $(".ChkUpdate").length) {
                $("#chkUpdateAll").prop('checked', true)
            }
            else {
                $("#chkUpdateAll").prop('checked', false)
                $("#chkbtnAll").prop('checked', false)
            }
        });
        ///For Update///

        ///For Delete///

        $("#chkDeleteAll").click(function () {
            $('.ChkDelete').not(this).prop('checked', this.checked);
            Check();
        });

        $(".ChkDelete").click(function () {
            if ($(".ChkDelete:checked").length == $(".ChkDelete").length) {
                $("#chkDeleteAll").prop('checked', true)
            }
            else {
                $("#chkDeleteAll").prop('checked', false)
                $("#chkbtnAll").prop('checked', false)
            }
        });
            ///For Delete///
    </script>
    <script src="~/js/Views/ProfileTaskMapping/Index.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}



